@using Humanizer
@model Konmaripo.Web.Models.IndividualRepoViewModel

@{
    ViewData["Title"] = "Repo";
}

<div>
    <h1 class="display-4">Repository: @Model.RepoInfo.Name</h1>
    <p>Details on the repository in case you want to archive.</p>
</div>

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th scope="col"><!--Private icon--></th>
            <th scope="col">Name</th>
            <th scope="col" title="Stars"><i class="fas fa-star"></i></th>
            <th scope="col" title="Watchers"><i class="fas fa-eye"></i></th>
            <th scope="col" title="Forks"><i class="fas fa-code-branch"></i></th>
            <th scope="col" title="Issues"><i class="fas fa-exclamation-circle"></i></th>
            <th scope="col" title="Date the repository was created">Created</th>
            <th scope="col" title="Date the repository was updated, e.g. title, language, settings, properties">Updated</th>
            <th scope="col" title="Date the Repository last had changes pushed to it">Pushed</th>
        </tr>
    </thead>
    @{ var item = Model.RepoInfo;}
    <tbody>
        <tr>
            @if (item.IsPrivate)
            {
                <td title="Private repository">
                    <i class="fas fa-lock text-success"></i>
                </td>
            }
            else
            {
                <td title="Public repository">
                    <i class="fas fa-lock-open text-danger"></i>
                </td>
            }
            <th scope="row" title="@item.Description"><a href="@item.RepoUrl" target="_blank"><i class="fas fa-external-link-alt"></i></a> @item.Name</th>
            <td>@item.StarCount</td>
            <td>@item.WatcherCount</td>
            <td>@item.ForkCount</td>
            <td>@item.OpenIssueCount</td>
            <td title="@item.CreatedDate">@item.CreatedDate.Humanize()</td>
            <td title="@item.UpdatedDate">@item.UpdatedDate.Humanize()</td>
            @if (item.PushedDate.HasValue)
            {
                <td title="@item.PushedDate">@item.PushedDate.Value.Humanize()</td>
            }
            else
            {
                <td>Never</td>
            }
        </tr>
    </tbody>
</table>

<div>
    <h1 class="display-4">Extended Information</h1>
    <p>Use this information in your decision making process as well.</p>
</div>

<table class="table table-striped">
    <thead class="thead-dark">
        <tr>
            <th scope="col">Watchers</th>
            <th scope="col">Views in Past 14 days</th>
            <th scope="col">Commit Activity in Last 4 Weeks</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>@Model.ExtendedInfo.NumberOfWatchers</td>
            <td>@Model.ExtendedInfo.ViewsInTheLast14Days</td>
            <td>@Model.ExtendedInfo.CommitActivityInTheLast4Weeks</td>
        </tr>
    </tbody>
</table>

<div>
    <h1 class="display-4">Archive this Repository?</h1>
    <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">Clicking this will archive the repository!</h4>
        <p>This will make the repository, issues, pull requests, labels, milestones, projects, wiki, releases, commits, tags, branches, reactions and comments read-only and disable any future comments. The repository can still be forked.</p>

        <p>Clicking this button will: </p>
        <ul>
            <li>Create a pinned issue in the repository noting that it has been archived</li>
            <li>Mention you as the user who archived it</li>
            <li>Actually archive the repository</li>
        </ul>

        @Html.ActionLink($"Archive {Model.RepoInfo.Name}", "ArchiveRepo", new {repoId = Model.RepoInfo.Id, repoName = Model.RepoInfo.Name}, new{@class = "btn btn-danger", role="button"})
    </div>
</div>
